version: "3.9"
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: db_admin
      POSTGRES_PASSWORD: P@ssw0rd
      POSTGRES_DB: csharp_sample_solution_db
    ports: [ "5432:5432" ]
    volumes:
      - pg_data:/var/lib/postgresql/data # 把 pg_data 掛到容器內 data 目錄
      - ./infra/db/postgres/init:/docker-entrypoint-initdb.d:ro

  rabbitmq:
    build:
      context: src/Librarys/Library.RabbitMQ
      dockerfile: Dockerfile
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq   # 保留資料持久化；不要再綁 definitions 檔

  auth:
    build:
      context: .
      dockerfile: src/Services/Service.Auth/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  webapi:
    build:
      context: .
      dockerfile: src/Services/Service.WebAPI/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - rabbitmq

  job:
    build:
      context: .
      dockerfile: src/Services/Service.Job/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Docker
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started

#  graphql:
#    build:
#      context: .
#      dockerfile: src/Services/Service.GraphQL/Dockerfile
#    environment:
#      ASPNETCORE_ENVIRONMENT: Docker
#    ports:
#      - "8082:8080"
#    depends_on:
#      - postgres

volumes:
  pg_data:
  rabbitmq_data:
